main:
  depends_on:
    - node
    - ruby
    - crystal
    - go
    - rust
    - elixir
    - swift
    - scala
    - python
    - nim
    - csharp
    - objc
    - benchmarker

node:
  depends_on:
    - express
    - clusterexpress
    - polka
    - clusterpolka

express:
  command: |
    npm install
    ln -s -f ../node/express/bin/server_node_express ../../bin/.
  dir:
    node/express

clusterexpress:
  command: |
    npm install
    ln -s -f ../node/express/bin/server_node_clusterexpress ../../bin/.
  dir:
    node/express

polka:
  command: |
    npm install
    ln -s -f ../node/polka/bin/server_node_polka ../../bin/.
  dir:
    node/polka

clusterpolka:
  command: |
    npm install
    ln -s -f ../node/polka/bin/server_node_clusterpolka ../../bin/.
  dir:
    node/polka

ruby:
  depends_on:
    - rails
    - sinatra
    - roda

rails:
  command: |
    bundle update
    bundle install --path vendor/bundle
    ln -s -f ../ruby/rails/bin/server_ruby_rails ../../bin/.
  dir:
    ruby/rails

sinatra:
  command: |
    bundle update
    bundle install --path vendor/bundle
    ln -s -f ../ruby/sinatra/server_ruby_sinatra ../../bin/.
  dir:
    ruby/sinatra

roda:
  command: |
    bundle update
    bundle install --path vendor/bundle
    ln -s -f ../ruby/roda/server_ruby_roda ../../bin/.
  dir:
    ruby/roda

crystal:
  depends_on:
    - kemal
    - router_cr
    - raze

kemal:
  command: |
    shards update
    shards build --release
    ln -s -f ../crystal/kemal/bin/server_crystal_kemal ../../bin/.
  dir:
    crystal/kemal

raze:
  command: |
    shards update
    shards build --release
    ln -s -f ../crystal/raze/bin/server_crystal_raze ../../bin/.
  dir:
    crystal/raze

router_cr:
  command: |
    shards update
    shards build --release
    ln -s -f ../crystal/router.cr/bin/server_crystal_router_cr ../../bin/.
  dir:
    crystal/router.cr

go:
  depends_on:
    - echo
    - gorilla-mux
    - fasthttprouter
    - iris
    - gin

echo:
  command: |
    go get -u github.com/labstack/echo
    go build -o server_go_echo main.go
    ln -s -f ../go/echo/server_go_echo ../../bin/.
  dir:
    go/echo

gorilla-mux:
  command: |
    go get -u github.com/gorilla/mux
    go build -o server_go_gorilla_mux main.go
    ln -s -f ../go/gorilla-mux/server_go_gorilla_mux ../../bin/.
  dir:
    go/gorilla-mux

iris:
  command: |
    go get -u github.com/kataras/iris
    go build -o server_go_iris main.go
    ln -s -f ../go/iris/server_go_iris ../../bin/.
  dir:
    go/iris

fasthttprouter:
  command: |
    go get -u github.com/buaazp/fasthttprouter
    go get -u github.com/valyala/fasthttp
    go build -o server_go_fasthttprouter main.go
    ln -s -f ../go/fasthttprouter/server_go_fasthttprouter ../../bin/.
  dir:
    go/fasthttprouter

gin:
  command: |
    go get github.com/gin-gonic/gin
    go build -o server_go_gin main.go
    ln -s -f ../go/gin/server_go_gin ../../bin/.
  dir:
    go/gin

rust:
  depends_on:
    - iron
    - nickel
    - rocket
    - actix

iron:
  command: |
    cargo update
    cargo build --release
    ln -s -f ../rust/iron/target/release/server_rust_iron ../../bin/.
  dir:
    rust/iron

nickel:
  command: |
    cargo update
    cargo build --release
    ln -s -f ../rust/nickel/target/release/server_rust_nickel ../../bin/.
  dir:
    rust/nickel

rocket:
  command: |
    cargo update
    cargo build --release
    ln -s -f ../rust/rocket/target/release/server_rust_rocket ../../bin/.
  dir:
    rust/rocket

actix:
  command: |
    cargo update
    cargo build --release
    ln -s -f ../rust/actix/target/release/server_rust_actix ../../bin/.
  dir:
    rust/actix

objc:
  depends_on:
    - criollo

criollo:
  command: |
    pod install
    xcodebuild -workspace server_objc_criollo.xcworkspace -scheme server_objc_criollo -derivedDataPath ./derivedData
    ln -s -f ../objc/criollo/derivedData/Build/Products/Debug/server_objc_criollo.app/Contents/MacOS/server_objc_criollo ../../bin/.
  dir:
    objc/criollo

elixir:
  depends_on:
    - plug
    - phoenix

plug:
  command: |
    echo "yes" | mix deps.get --force; MIX_ENV=prod mix release --no-tar
    ln -s -f ../elixir/plug/bin/server_elixir_plug ../../bin/.
  dir:
    elixir/plug

phoenix:
  command: |
    echo "yes" | mix do local.rebar; mix deps.get --force; MIX_ENV=prod mix release --no-tar
    ln -s -f ../elixir/phoenix/bin/server_elixir_phoenix ../../bin/.
  dir:
    elixir/phoenix


swift:
  depends_on:
    - vapor
    - perfect
    - kitura

vapor:
  command: |
    swift build -c release
    ln -s -f ../swift/vapor/.build/release/server_swift_vapor ../../bin/.
  dir:
    swift/vapor

perfect:
  command: |
    swift build --configuration release
    ln -s -f ../swift/perfect/.build/release/server_swift_perfect ../../bin/.
  dir:
    swift/perfect

kitura:
  command: |
    swift build --configuration release
    ln -s -f ../swift/kitura/.build/release/server_swift_kitura ../../bin/.
  dir:
    swift/kitura

scala:
  depends_on:
    - akkahttp

akkahttp:
  command: |
    sbt assembly
    ln -s -f ../scala/akkahttp/bin/server_scala_akkahttp ../../bin/.
  dir:
    scala/akkahttp

python:
  depends_on:
    - sanic
    - japronto
    - flask

sanic:
  command: |
    pip3 install -r requirements.txt; chmod +x server_python_sanic.py
    ln -s -f ../python/sanic/server_python_sanic.py ../../bin/server_python_sanic
  dir:
    python/sanic

japronto:
  command: |
    pip3 install -r requirements.txt; chmod +x server_python_japronto.py
    ln -s -f ../python/japronto/server_python_japronto.py ../../bin/server_python_japronto
  dir:
    python/japronto

flask:
  command: |
    pip3 install -r requirements.txt; chmod +x server_python_flask.py
    ln -s -f ../python/flask/server_python_flask.py ../../bin/server_python_flask
  dir:
    python/flask

nim:
  depends_on:
   - jester

jester:
  command: |
    nimble install -y; nim c server_nim_jester.nim
    ln -s -f ../nim/jester/server_nim_jester ../../bin/server_nim_jester
  dir:
    nim/jester

csharp:
  depends_on:
    - aspnetcore

aspnetcore:
  command: |
    dotnet restore
    dotnet build
    ln -s -f ../csharp/aspnetcore/server_csharp_aspnetcore ../../bin/server_csharp_aspnetcore
  dir:
    csharp/aspnetcore

objc:
  depends_on:
    - criollo

criollo:
  command: |
    pod install
    xcodebuild -workspace server_objc_criollo.xcworkspace -scheme server_objc_criollo -derivedDataPath ./derivedData
    ln -s -f ../objc/criollo/derivedData/Build/Products/Debug/server_objc_criollo.app/Contents/MacOS/server_objc_criollo ../../bin/server_objc_criollo
  dir:
    objc/criollo

benchmarker:
  command: |
    crystal build src/benchmarker.cr -o bin/benchmarker --release
    ln -s -f ../tools/bin/benchmarker ../bin/.
  depends_on:
    client
  dir:
    tools
  src:
    tools/src/benchmarker.cr

client:
  command: |
    crystal build src/client.cr -o bin/client --release
    ln -s -f ../tools/bin/client ../bin/.
  dir:
    tools
  src:
    tools/src/client.cr

clean_bin:
  command:
    rm -rf bin/*
